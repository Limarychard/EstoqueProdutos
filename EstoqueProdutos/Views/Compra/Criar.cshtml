@model CompraModel;

<div class="container border">

    <h1>Criar uma nova compra</h1>

    <form method="post" asp-controller="Compra" asp-action="Criar" class="row g-3">
        <div class="col-md-12">
            <label asp-for="FornecedorId" for="inputFornecedor" class="form-label">Fornecedor</label>
                <select asp-for="FornecedorId" class="form-select" aria-label="Default select example">
                <option value="" selected>Selecione o fornecedor</option>
                    @foreach (var fornecedor in ViewBag.Fornecedores)
                    {
                        <option value="@fornecedor.Value">@fornecedor.Text</option>
                    }
                </select>
            @Html.ValidationMessageFor(x => x.FornecedorId)
        </div>

        <div class="col-md-12">
            <label asp-for="ProdutoCompraId">
                Clique para selecionar um ou mais produtos:
            </label>
            <select asp-for="ProdutoCompraId" id="idSelect2" class="form-select select2" multiple>
                @foreach (var produto in ViewBag.Produtos)
                {
                    <option value="@produto.Value">@produto.Text</option>
                }
            </select>
            @Html.ValidationMessageFor(x => x.ProdutoCompraId)
        </div>

        <div id="quantidadeProdutosDiv" class="d-none"></div>

        <div class="col-12">
            <label asp-for="Valor" for="inputValor" class="form-label">Valor Total</label>
            <input asp-for="Valor" type="text" class="form-control money" id="inputValor" value="@Model?.Valor" />
            @Html.ValidationMessageFor(x => x.Valor)
        </div>
        <div class="col-12">
            <label asp-for="FormaDePagamento" for="inputFormaDePagamento" class="form-label">Forma de pagamento</label>
            <select asp-for="FormaDePagamento" class="form-select" aria-label="Default select example">
                @if (ViewBag.FormasDePagamento != null)
                {
                    @foreach (var opt in ViewBag.FormasDePagamento)
                    {
                        <option value="@opt.Value">@opt.Text</option>
                    }
                }
            </select>
        </div>
        <div class="form-check">
            <input asp-for="Parcelado" class="form-check-input" type="checkbox" id="Parcelado" name="Parcelado" onchange="toggleParcelas()">
            <label asp-for="Parcelado" class="form-check-label">
                Parcelado
            </label>
        </div>
        <div id="parcelasDiv" class="form-check d-none">
            <label asp-for="QuantidadeDeParcela" for="customRange2" class="form-label">Número de Parcelas: <span id="quantidadeParcelas">1</span></label>
            <input asp-for="QuantidadeDeParcela" type="range" class="form-range" min="1" max="12" value="1" id="customRange2" oninput="atualizarParcelas()">
        </div>

        <div class="d-flex gap-5 mb-3">
            <button type="submit" class="btn btn-primary w-50">Criar</button>
            <a asp-controller="Compra" asp-action="Index" class="btn btn-secondary w-50"> Voltar </a>
        </div>

    </form>

</div>

@section Scripts {
    <script>
        // Parse os produtos enviados pelo controlador
        var produtos = @Html.Raw(ViewBag.ProdutosJson);

        // Quando a página carregar
        $(document).ready(function () {
            $('#idSelect2').select2({
                placeholder: "Selecione os produtos",
                width: '100%',
                allowClear: true
            });

            // Evento ao mudar os produtos selecionados
            $('#idSelect2').on('change', function () {
                var quantidadeDiv = $('#quantidadeProdutosDiv');
                quantidadeDiv.removeClass('d-none');
                quantidadeDiv.empty();

                var selectedOptions = $(this).val();
                var valorTotal = 0;

                // Itera sobre os produtos selecionados
                selectedOptions.forEach(function (produtoId) {
                    var produto = produtos.find(p => p.Id == produtoId);

                    if (produto) {
                        var inputQuantidade = $('<input>', {
                            type: 'number',
                            name: 'quantidadesProduto',
                            value: 1,
                            min: 1,
                            class: 'form-control quantidadeProduto',
                            'data-preco': produto.ValorDeCusto
                        });

                        var label = $('<label>').text("Quantidade para " + produto.Nome);

                        var div = $('<div>').addClass('mb-3');
                        div.append(label).append(inputQuantidade);
                        quantidadeDiv.append(div);

                        // Atualiza o valor total quando a quantidade muda
                        inputQuantidade.on('input', function () {
                            var quantidade = parseInt($(this).val()) || 0;
                            valorTotal = 0;

                            $('.quantidadeProduto').each(function () {
                                var preco = parseFloat($(this).data('preco'));
                                var qtd = parseInt($(this).val()) || 0;
                                valorTotal += preco * qtd;
                            });

                            $('#inputValor').val(valorTotal.toFixed(2));
                        });
                    }
                });

                // Calcula o valor total inicialmente
                $('.quantidadeProduto').trigger('input');
            });
        });
    </script>
}